{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_usdfc",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "accessor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cost",
						"type": "uint256"
					}
				],
				"name": "AIDatasetAccessed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "cidHash",
						"type": "string"
					}
				],
				"name": "AIDatasetUploaded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "retriever",
						"type": "address"
					}
				],
				"name": "DataRetrieved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "PaymentReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"name": "StorageBalanceUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					}
				],
				"name": "StorageCompleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "requester",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "cidHash",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cost",
						"type": "uint256"
					}
				],
				"name": "StorageRequested",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "aiDatasets",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "cidHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "metadataCid",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rewardPool",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "accessPrice",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "verified",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "downloads",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					}
				],
				"name": "confirmStorage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum StarQuestFilecoinStorage.DataType",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "dataTypeCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "depositStorageBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "datasetId",
						"type": "bytes32"
					}
				],
				"name": "getAIDataset",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "cidHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "metadataCid",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rewardPool",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "accessPrice",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "verified",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "downloads",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"name": "getStorageRequest",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "requester",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "cidHash",
								"type": "string"
							},
							{
								"internalType": "enum StarQuestFilecoinStorage.DataType",
								"name": "dataType",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "dataSize",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "storageDuration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "cost",
								"type": "uint256"
							},
							{
								"internalType": "enum StarQuestFilecoinStorage.StorageStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expiresAt",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "dealId",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct StarQuestFilecoinStorage.StorageRequest",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getStorageStats",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalChallengeData",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalAITrainingData",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalPlayerProofs",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalGameAssets",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserDatasets",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserStorageRequests",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "datasetId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "hasDatasetAccess",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "datasetId",
						"type": "bytes32"
					}
				],
				"name": "purchaseDatasetAccess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"name": "requestRetrieval",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "cidHash",
						"type": "string"
					},
					{
						"internalType": "enum StarQuestFilecoinStorage.DataType",
						"name": "dataType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "dataSize",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "storageDuration",
						"type": "uint256"
					}
				],
				"name": "requestStorage",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "retrievalPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_synapseSdk",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_starQuestCore",
						"type": "address"
					}
				],
				"name": "setContracts",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_storagePrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_retrievalPrice",
						"type": "uint256"
					}
				],
				"name": "setStoragePricing",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "starQuestCore",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "storagePrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "storageRequests",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "requester",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "cidHash",
						"type": "string"
					},
					{
						"internalType": "enum StarQuestFilecoinStorage.DataType",
						"name": "dataType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "dataSize",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "storageDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "cost",
						"type": "uint256"
					},
					{
						"internalType": "enum StarQuestFilecoinStorage.StorageStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "createdAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expiresAt",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "dealId",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "paid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "synapseSdk",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "cidHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "metadataCid",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "dataSize",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "accessPrice",
						"type": "uint256"
					}
				],
				"name": "uploadAIDataset",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "usdfc",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userDatasets",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userStorageBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userStorageRequests",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "datasetId",
						"type": "bytes32"
					},
					{
						"internalType": "bool",
						"name": "verified",
						"type": "bool"
					}
				],
				"name": "verifyDataset",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawStorageBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Handles AI training data storage on Filecoin with USDFC payments Integrates with Synapse SDK for warm storage services",
			"kind": "dev",
			"methods": {
				"confirmStorage(bytes32,string)": {
					"details": "Confirm storage completion (called by Synapse SDK)"
				},
				"depositStorageBalance(uint256)": {
					"details": "Deposit USDFC for storage services"
				},
				"emergencyWithdraw()": {
					"details": "Emergency withdrawal (owner only)"
				},
				"getAIDataset(bytes32)": {
					"details": "Get AI dataset details (excluding mapping)"
				},
				"getStorageRequest(bytes32)": {
					"details": "Get storage request details"
				},
				"getStorageStats()": {
					"details": "Get storage statistics"
				},
				"getUserDatasets(address)": {
					"details": "Get user's datasets"
				},
				"getUserStorageRequests(address)": {
					"details": "Get user's storage requests"
				},
				"hasDatasetAccess(bytes32,address)": {
					"details": "Check dataset access"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"purchaseDatasetAccess(bytes32)": {
					"details": "Purchase access to AI dataset"
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"requestRetrieval(bytes32)": {
					"details": "Request data retrieval"
				},
				"requestStorage(string,uint8,uint256,uint256)": {
					"details": "Request storage for game data"
				},
				"setContracts(address,address)": {
					"details": "Set contract addresses"
				},
				"setStoragePricing(uint256,uint256)": {
					"details": "Set storage pricing"
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"uploadAIDataset(string,string,uint256,uint256)": {
					"details": "Upload AI training dataset"
				},
				"verifyDataset(bytes32,bool)": {
					"details": "Verify AI dataset (only owner)"
				},
				"withdrawStorageBalance(uint256)": {
					"details": "Withdraw user storage balance"
				}
			},
			"title": "StarQuest Filecoin Storage Contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/contracts/Filecoin.sol": "StarQuestFilecoinStorage"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/contracts/Filecoin.sol": {
			"keccak256": "0x4da9ed09c7c2026d21628a17b706d3abd7b32b816de4d42276915c38691d916d",
			"license": "MIT",
			"urls": [
				"bzz-raw://74b490a6a28dfca623926d0055ee658c1e2b1f7a5ffd4f39af78ee251616f0fa",
				"dweb:/ipfs/QmZJEXmoBGAWXPpUEjjYfg4QtjYepcRVS99JZsCXjDmn7e"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
				"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/utils/Context.sol": {
			"keccak256": "0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439",
			"license": "MIT",
			"urls": [
				"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c",
				"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"
			]
		}
	},
	"version": 1
}