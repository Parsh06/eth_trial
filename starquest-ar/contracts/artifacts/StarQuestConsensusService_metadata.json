{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_topicId",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "challengeId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "aiAgent",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "verified",
						"type": "bool"
					}
				],
				"name": "AIDecisionLogged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "eventId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					}
				],
				"name": "GameEventLogged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "messageId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "hcsMessageId",
						"type": "string"
					}
				],
				"name": "HCSMessageConfirmed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newRank",
						"type": "uint256"
					}
				],
				"name": "LeaderboardUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "messageId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum StarQuestConsensusService.MessageType",
						"name": "messageType",
						"type": "uint8"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "MessageSubmitted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "newTopicId",
						"type": "string"
					}
				],
				"name": "TopicUpdated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "aiDecisionLogs",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "challengeId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "aiAgent",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "challengeType",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "verified",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "confidence",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "reasoningHash",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "messageId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "hcsMessageId",
						"type": "string"
					}
				],
				"name": "confirmHCSMessage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "consensusMessages",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "enum StarQuestConsensusService.MessageType",
						"name": "messageType",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "dataHash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "ipfsHash",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "submitted",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "hcsMessageId",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "gameEventLogs",
				"outputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "eventType",
						"type": "string"
					},
					{
						"internalType": "bytes32",
						"name": "challengeId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "stakeAmount",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "proofHash",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "challengeId",
						"type": "bytes32"
					}
				],
				"name": "getAIDecisionLog",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "challengeId",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "aiAgent",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "challengeType",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "verified",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "confidence",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "reasoningHash",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct StarQuestConsensusService.AIDecisionLog",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "messageId",
						"type": "uint256"
					}
				],
				"name": "getConsensusMessage",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "enum StarQuestConsensusService.MessageType",
								"name": "messageType",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "player",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "dataHash",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "ipfsHash",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "submitted",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "hcsMessageId",
								"type": "string"
							}
						],
						"internalType": "struct StarQuestConsensusService.ConsensusMessage",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "eventId",
						"type": "bytes32"
					}
				],
				"name": "getGameEventLog",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "player",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "eventType",
								"type": "string"
							},
							{
								"internalType": "bytes32",
								"name": "challengeId",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "stakeAmount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "success",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "payout",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "proofHash",
								"type": "string"
							}
						],
						"internalType": "struct StarQuestConsensusService.GameEventLog",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLeaderboardStats",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalPlayers",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalStaked",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalWon",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum StarQuestConsensusService.MessageType",
						"name": "messageType",
						"type": "uint8"
					}
				],
				"name": "getMessageCountByType",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "getPlayerMessageHistory",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "getPlayerRanking",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"name": "getTopPlayers",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "player",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "totalStaked",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalWon",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "winRate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "streak",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lastUpdated",
								"type": "uint256"
							}
						],
						"internalType": "struct StarQuestConsensusService.LeaderboardEntry[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalMessageCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "leaderboard",
				"outputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "totalStaked",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalWon",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "winRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "streak",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdated",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "messageCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum StarQuestConsensusService.MessageType",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "messageTypeCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "playerMessageHistory",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "playerRankings",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_starQuestCore",
						"type": "address"
					}
				],
				"name": "setStarQuestCore",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "starQuestCore",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "challengeId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "aiAgent",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "challengeType",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "verified",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "confidence",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "reasoningHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "ipfsHash",
						"type": "string"
					}
				],
				"name": "submitAIDecision",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "achievementType",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "achievementName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "ipfsHash",
						"type": "string"
					}
				],
				"name": "submitAchievementUnlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "challengeId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "stakeAmount",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "proofHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "ipfsHash",
						"type": "string"
					}
				],
				"name": "submitGameEvent",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "topPlayers",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "topicId",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_topicId",
						"type": "string"
					}
				],
				"name": "updateTopicId",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Integrates with Hedera Consensus Service (HCS) for immutable game logs Records game events, leaderboards, and AI decision logs",
			"kind": "dev",
			"methods": {
				"confirmHCSMessage(uint256,string)": {
					"details": "Confirm HCS message submission (called by backend service)"
				},
				"getAIDecisionLog(bytes32)": {
					"details": "Get AI decision log"
				},
				"getConsensusMessage(uint256)": {
					"details": "Get message details"
				},
				"getGameEventLog(bytes32)": {
					"details": "Get game event log"
				},
				"getLeaderboardStats()": {
					"details": "Get leaderboard stats"
				},
				"getMessageCountByType(uint8)": {
					"details": "Get message count by type"
				},
				"getPlayerMessageHistory(address)": {
					"details": "Get player's message history"
				},
				"getPlayerRanking(address)": {
					"details": "Get player ranking"
				},
				"getTopPlayers(uint256)": {
					"details": "Get top N players from leaderboard"
				},
				"getTotalMessageCount()": {
					"details": "Get total message count"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"setStarQuestCore(address)": {
					"details": "Set StarQuest core contract"
				},
				"submitAIDecision(bytes32,address,string,bool,uint256,string,string)": {
					"details": "Submit AI decision to consensus service"
				},
				"submitAchievementUnlock(address,uint256,string,string)": {
					"details": "Submit achievement unlock to consensus service"
				},
				"submitGameEvent(address,bytes32,uint256,bool,uint256,string,string)": {
					"details": "Submit game event to consensus service"
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateTopicId(string)": {
					"details": "Update HCS topic ID"
				}
			},
			"title": "StarQuest Consensus Service Contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/contracts/Consensus.sol": "StarQuestConsensusService"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/contracts/Consensus.sol": {
			"keccak256": "0x167685b5a532caa75a7c2aed5481f5fb01433778cce70966be9aecb3b788db41",
			"license": "MIT",
			"urls": [
				"bzz-raw://556aa1624c8756e27941c45da76216faef8fdb4d4d12bd5d99b00ffb8e381b3a",
				"dweb:/ipfs/QmVXXGKAoAj9pZxcFUf7xDpZXKGyowTyuwS4gTpAczRNAv"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		}
	},
	"version": 1
}