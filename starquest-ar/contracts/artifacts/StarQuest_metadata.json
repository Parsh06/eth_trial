{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_storageWallet",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "aiAgent",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "authorized",
						"type": "bool"
					}
				],
				"name": "AIAgentAuthorized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "challengeId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "payout",
						"type": "uint256"
					}
				],
				"name": "ChallengeCompleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "challengeId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "starId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "challengeHash",
						"type": "string"
					}
				],
				"name": "ChallengeCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "EmergencyWithdrawal",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "challengeId",
						"type": "uint256"
					}
				],
				"name": "Staked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "starId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "latitude",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "longitude",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "enum StarQuest.StarType",
						"name": "starType",
						"type": "uint8"
					}
				],
				"name": "StarAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "starId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"name": "StarUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "starId",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "latitude",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "longitude",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "radius",
						"type": "uint256"
					},
					{
						"internalType": "enum StarQuest.StarType",
						"name": "starType",
						"type": "uint8"
					}
				],
				"name": "addStar",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "aiAgent",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "authorized",
						"type": "bool"
					}
				],
				"name": "authorizeAI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "authorizedAI",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "challenges",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "stakeAmount",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "challengeHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "proofHash",
						"type": "string"
					},
					{
						"internalType": "enum StarQuest.ChallengeStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "createdAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "completedAt",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "aiVerified",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "starId",
						"type": "uint256"
					},
					{
						"internalType": "enum StarQuest.StarType",
						"name": "starType",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "challengeId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "proofHash",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					}
				],
				"name": "completeChallenge",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "starId",
						"type": "uint256"
					}
				],
				"name": "createStake",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "challengeId",
						"type": "uint256"
					}
				],
				"name": "getChallengeDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "player",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "stakeAmount",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "challengeHash",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "proofHash",
								"type": "string"
							},
							{
								"internalType": "enum StarQuest.ChallengeStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "completedAt",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "aiVerified",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "starId",
								"type": "uint256"
							},
							{
								"internalType": "enum StarQuest.StarType",
								"name": "starType",
								"type": "uint8"
							}
						],
						"internalType": "struct StarQuest.Challenge",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "getPlayerChallengeHistory",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "starId",
						"type": "uint256"
					}
				],
				"name": "getStarDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "int256",
								"name": "latitude",
								"type": "int256"
							},
							{
								"internalType": "int256",
								"name": "longitude",
								"type": "int256"
							},
							{
								"internalType": "uint256",
								"name": "radius",
								"type": "uint256"
							},
							{
								"internalType": "enum StarQuest.StarType",
								"name": "starType",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "active",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "challengesCompleted",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalStaked",
								"type": "uint256"
							}
						],
						"internalType": "struct StarQuest.Star",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum StarQuest.StarType",
						"name": "starType",
						"type": "uint8"
					}
				],
				"name": "getStarMultiplier",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "houseFeePercent",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maximumStake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumStake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "oracleContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "playerChallengeHistory",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "playerStakes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "challengeId",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "playerStats",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalStaked",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalWon",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "challengesCompleted",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "challengesFailed",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentStreak",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "longestStreak",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastPlayedTimestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_minimumStake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maximumStake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_winMultiplier",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_houseFeePercent",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_storageWallet",
						"type": "address"
					}
				],
				"name": "setGameParameters",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stars",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "latitude",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "longitude",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "radius",
						"type": "uint256"
					},
					{
						"internalType": "enum StarQuest.StarType",
						"name": "starType",
						"type": "uint8"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "challengesCompleted",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalStaked",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "storageWallet",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "challengeId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "challengeHash",
						"type": "string"
					}
				],
				"name": "submitChallenge",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "starId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"name": "updateStar",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "winMultiplier",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "Main game logic contract for StarQuest AR with staking and challenges Deployed on Hedera EVM (Testnet/Mainnet)",
			"events": {
				"Paused(address)": {
					"details": "Emitted when the pause is triggered by `account`."
				},
				"Unpaused(address)": {
					"details": "Emitted when the pause is lifted by `account`."
				}
			},
			"kind": "dev",
			"methods": {
				"addStar(uint256,int256,int256,uint256,uint8)": {
					"details": "Add a new star location (only owner)"
				},
				"authorizeAI(address,bool)": {
					"details": "Authorize AI agent"
				},
				"completeChallenge(uint256,string,bool)": {
					"details": "Complete challenge with AI verification",
					"params": {
						"challengeId": "The challenge ID",
						"proofHash": "IPFS hash of player's proof",
						"success": "Whether the challenge was successful"
					}
				},
				"createStake(uint256)": {
					"details": "Stake HBAR/ETH to participate in a challenge",
					"params": {
						"starId": "The ID of the star to challenge"
					}
				},
				"emergencyWithdraw()": {
					"details": "Emergency withdrawal (only in case of issues)"
				},
				"getChallengeDetails(uint256)": {
					"details": "Get challenge details"
				},
				"getPlayerChallengeHistory(address)": {
					"details": "Get player's challenge history"
				},
				"getStarDetails(uint256)": {
					"details": "Get star details"
				},
				"getStarMultiplier(uint8)": {
					"details": "Get multiplier based on star type"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"pause()": {
					"details": "Pause/unpause contract"
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"setGameParameters(uint256,uint256,uint256,uint256,address)": {
					"details": "Set game parameters (only owner)"
				},
				"submitChallenge(uint256,string)": {
					"details": "Submit challenge data (called by AI service)",
					"params": {
						"challengeHash": "IPFS hash of challenge data",
						"challengeId": "The challenge ID"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateStar(uint256,bool)": {
					"details": "Update star status"
				},
				"withdrawBalance()": {
					"details": "Withdraw contract balance (only owner)"
				}
			},
			"title": "StarQuest Core Contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/contracts/Core.sol": "StarQuest"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/contracts/Core.sol": {
			"keccak256": "0x76708af7646e6a1d2cdfcd07e39c0089c3f4b38e6a37df0bc9dd2595f709d01e",
			"license": "MIT",
			"urls": [
				"bzz-raw://93ae1885ed39d6c65cfdb4dc9d794d53b5b7f43a42f2b095d52718b269dd6b1c",
				"dweb:/ipfs/QmPYZwqmjEtTuvhQ96VPyGEtj83LTAV5BjFBRH8cn2oAJY"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/security/Pausable.sol": {
			"keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
				"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/utils/Context.sol": {
			"keccak256": "0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439",
			"license": "MIT",
			"urls": [
				"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c",
				"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.6/contracts/utils/Counters.sol": {
			"keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
			"license": "MIT",
			"urls": [
				"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
				"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
			]
		}
	},
	"version": 1
}